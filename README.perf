
The make target perf_report will run the perf test (from test.c) and
create some stats organized by current HEAD and CPU type. These are
useful for comparing changes between commits.

Note that to generate the full inxi report you need to run it as root
(inxi -m requires root to use dmidecode). However, this is only needed
to generate the expected inxi.log file (see below). During regular
development/testing and/or if you'd rather not run it as root, all the
tests and reports will work fine as a regular user.

The following files will be generated under ./perf_reports/%h_%f/$HOSTNAME_$CPUID/
    inxi.log   - System info from inxi (Linux only)
    lscpu.log  - CPU info from lscpu (Linux only)
    test_1.log - Test run and perf stats output, 5 million entries
    test_2.log - Test run and perf stats output, 10 million entries
    test_3.log - Test run and perf stats output, 50 million entries
%h = git abbreviated commit tag for most recent commit (see git log)
%f = git commit title, sanitized (see git log)

(Note that $CPUID above is generated using perf_reports/cpu_id on
Linux only. On other platforms, it contains the output of 'uname'.)

In other words, to generate a final report for a given commit you'll
want to commit the finalized changes and then run perf_report.

Note also that the result saved is from a single run. Ideally it
should average many runs.


Short summary of recorded runs below (see perf_reports directory for
full details). The table shows elapsed time (seconds) for each of the
three tests.

boq_GenuineIntel-6.54.9_24K Dual core Intel Atom S1260
----------------------------------------------------------------------
                test_1  test_2  test_3
v1.0               9.3    19.3   126.4
b9dc070            9.4    19.3   127.3
cb68f60            9.6    19.4   126.7
c558523            7.6    15.9    86.7
v1.1               7.7    16.0    85.7
